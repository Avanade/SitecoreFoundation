@using Sitecore.Mvc.Presentation
@using Sitecore.Mvc
@using SF.Foundation.Container
@using SF.Foundation.Structure
@using SF.Foundation.CommonComponents

@model RenderingModel

@{
    string containerClass = "owl-carousel";
    if (Sitecore.Context.PageMode.IsExperienceEditorEditing)
    {
        //Has no styles defined.
        containerClass = "owl-carousel-page-Editor";
    }
    
    System.Text.StringBuilder sb = new System.Text.StringBuilder();
    sb.Append("{ ");
    
    
    if (Html.GetCheckboxRenderingParameterValue("Display Single Item"))
    {
        sb.Append(@"""singleItem"":true,");
    }
    else
    {
        string maxItems = Html.GetRenderingParameter("Max Display Items");
        if (!string.IsNullOrEmpty(maxItems))
        {
            sb.Append(@"""items"":").Append(maxItems).Append(",");
        }
        
        string desktopResolution = Html.GetRenderingParameter("Desktop Resolution");
        string desktopItems = Html.GetRenderingParameter("Desktop Items"); 
        if (!string.IsNullOrEmpty(desktopResolution) && !string.IsNullOrEmpty(desktopItems))
        {
            sb.Append(@"""itemsDesktop"":[").Append(desktopResolution).Append(",").Append(desktopItems).Append("],");   
        }
        
        string smallDesktopResolution = Html.GetRenderingParameter("Small Desktop Resolution");
        string smallDesktopItems = Html.GetRenderingParameter("Small Desktop Items"); 
        if (!string.IsNullOrEmpty(smallDesktopResolution) && !string.IsNullOrEmpty(smallDesktopItems))
        {
            sb.Append(@"""itemsDesktopSmall"":[").Append(smallDesktopResolution).Append(",").Append(smallDesktopItems).Append("],");   
        }
        
        string tabletResolution = Html.GetRenderingParameter("Tablet Resolution");
        string tabletItems = Html.GetRenderingParameter("Tablet Items"); 
        if (!string.IsNullOrEmpty(tabletResolution) && !string.IsNullOrEmpty(tabletItems))
        {
            sb.Append(@"""itemsTablet"":[").Append(tabletResolution).Append(",").Append(tabletItems).Append("],");   
        }
        
        string smallTabletResolution = Html.GetRenderingParameter("Tablet Small Resolution");
        string smallTabletItems = Html.GetRenderingParameter("Tablet Small Items"); 
        if (!string.IsNullOrEmpty(smallTabletResolution) && !string.IsNullOrEmpty(smallTabletItems))
        {
            sb.Append(@"""itemsTabletSmall"":[").Append(smallTabletResolution).Append(",").Append(smallTabletItems).Append("],");   
        }
        
        string mobileResolution = Html.GetRenderingParameter("Mobile Resolution");
        string mobileItems = Html.GetRenderingParameter("Mobile Items"); 
        if (!string.IsNullOrEmpty(mobileResolution) && !string.IsNullOrEmpty(mobileItems))
        {
            sb.Append(@"""itemsMobile"":[").Append(mobileResolution).Append(",").Append(mobileItems).Append("],");   
        }
    }

    if (Html.GetCheckboxRenderingParameterValue("Items Scale Up"))
    {
        sb.Append(@"""itemsScaleUp"":true,");
    }

    if (!Html.GetCheckboxRenderingParameterValue("Pagination"))
    {
        sb.Append(@"""pagination"":false,");
    }

    if (Html.GetCheckboxRenderingParameterValue("Show Pagination Numbers"))
    {
        sb.Append(@"""paginationNumbers"":true,");
    }

    string paginationSpeed = Html.GetRenderingParameter("Pagination Speed");
    if (!string.IsNullOrEmpty(paginationSpeed))
    {
        sb.Append(@"""paginationSpeed"":").Append(paginationSpeed).Append(",");
    }

    if (Html.GetCheckboxRenderingParameterValue("Scroll Per Page"))
    {
        sb.Append(@"""scrollPerPage"":true,");
    }

    if (Html.GetCheckboxRenderingParameterValue("Navigation"))
    {
        sb.Append(@"""navigation"":true,");
    }

    string prevText = Html.GetRenderingParameter("Previous Text");
    string nextText = Html.GetRenderingParameter("Next Text");
    if (!string.IsNullOrEmpty(prevText) && !string.IsNullOrEmpty(nextText))
    {
        sb.Append(@"""navigationText"":[""").Append(prevText).Append(@""",""").Append(nextText).Append(@"""],");
    }

    string autoPlay = Html.GetRenderingParameter("Auto Play");
    if (!string.IsNullOrEmpty(autoPlay))
    {
        sb.Append(@"""autoPlay"":").Append(autoPlay).Append(",");
    }

    string slideSpeed = Html.GetRenderingParameter("Slide Speed");
    if (!string.IsNullOrEmpty(slideSpeed))
    {
        sb.Append(@"""slideSpeed"":").Append(slideSpeed).Append(",");
    }

    if (Html.GetCheckboxRenderingParameterValue("Stop on Hover"))
    {
        sb.Append(@"""stopOnHover"":true,");
    }

    if (!Html.GetCheckboxRenderingParameterValue("Rewind Nav"))
    {
        sb.Append(@"""rewindNav"":false,");
    }

    string transitionStyle = Html.GetRenderingParameter("Transition Style");
    if (!string.IsNullOrEmpty(transitionStyle))
    {
        sb.Append(@"""transitionStyle"":""").Append(transitionStyle).Append(@""",");
    }

    if (Html.GetCheckboxRenderingParameterValue("Auto Height"))
    {
        sb.Append(@"""autoHeight"":true,");
    }

    if (Html.GetCheckboxRenderingParameterValue("Add Class Active"))
    {
        sb.Append(@"""addClassActive"":true,");
    }
    
    if (sb.Length > 2)
    {
        //remove last comma
        sb.Remove(sb.Length - 1, 1);
    }
    
    sb.Append("}");
    var dataOptions = sb.ToString();
    
}

<div @Html.GetContainerTagAttributes(containerClass) data-options='@dataOptions'>
    @Html.Sitecore().DynamicPlaceholder("CarouselItems")
</div>

