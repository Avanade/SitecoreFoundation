@using Sitecore.Mvc.Presentation
@using Sitecore.Mvc
@using SF.Foundation.Container
@using SF.Foundation.Structure
@using SF.Foundation.CommonComponents

@{
    bool isNav = false;
    if (Html.GetCheckboxRenderingParameterValue("IsNavigation"))
    {
        isNav = true;
    }

    string displayNameField = Html.GetRenderingParameter("DisplayNameField");
    
    var crumbs = Sitecore.Context.Item.GetBreadcrumbTrail();
}

@if (isNav)
{
    <nav class="breadcrumbs" role="menubar" aria-label="@Sitecore.Globalization.Translate.TextByDomain("Global Dictionary Domain", "SF.Breadcrumbs.AriaLabel")">
        @foreach (var item in crumbs)
        {
            var attributes = string.Empty;
            if (item.IsCurrentItem())
            {
                attributes = @"class=current";
            }
            if (!item.HasLayout())
            {
                attributes = @"class=unavailable role=button aria-disabled=true";
            }
            var displayName = item.DisplayName;
            if (!string.IsNullOrEmpty(displayNameField) && item.HasField(displayNameField))
            {
                displayName = item.Fields[displayName].Value;
            }
            <li role="menuitem" @attributes><a href="@item.GetItemUrl()">@displayName</a></li>
        }
        
    </nav>
}
else
{
    <ul class="breadcrumbs">
        @foreach (var item in crumbs)
        {
            var attributes = string.Empty;
            if (item.IsCurrentItem())
            {
                attributes = @"class=current";
            }
            if (!item.HasLayout())
            {
                attributes = @"class=unavailable";
            }
            var displayName = item.DisplayName;
            if (!string.IsNullOrEmpty(displayNameField) && item.HasField(displayNameField))
            {
                displayName = item.Fields[displayName].Value;
            }
            <li @attributes><a href="@item.GetItemUrl()">@displayName</a></li>
        }

    </ul>
}