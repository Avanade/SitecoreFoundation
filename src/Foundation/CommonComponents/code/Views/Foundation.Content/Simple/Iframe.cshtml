@using Sitecore.Mvc.Presentation
@using Sitecore.Mvc
@using SF.Foundation.Container

@{
    Sitecore.Data.Items.Item item = Model.Item;
    string source = ((Sitecore.Data.Fields.LinkField)item.Fields["Source"]).GetFriendlyUrl();
    string width = item.Fields["Width"].Value;
    string height = item.Fields["height"].Value;
    string name = item.Fields["name"].Value;
    
    System.Text.StringBuilder sb = new System.Text.StringBuilder();

    if (!string.IsNullOrEmpty(name))
    {
        sb.Append(" name=").Append(name).Append(" ");
    }
    if (!string.IsNullOrEmpty(width))
    {
        sb.Append(" width=").Append(width).Append(" ");
    }

    if (!string.IsNullOrEmpty(height))
    {
        sb.Append(" height=").Append(height).Append(" ");
    }

    string attr = sb.ToString().Trim();
    
}

@using (Html.ComponentContainer("iframe-component"))
{
    if (string.IsNullOrEmpty(source) && Sitecore.Context.PageMode.IsExperienceEditorEditing)
    {
        <p>Please configure the source for the iframe.</p>
    }
    if (Sitecore.Context.PageMode.IsExperienceEditorEditing)
    {
        <p>Iframe Src: @Html.Sitecore().Field("Source")</p>
    }
    else
    {
        <iframe src="@source" @attr ></iframe>
    }    

}